# Generated by Django 5.0 on 2023-12-29 06:04

import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('fullName', models.CharField(max_length=255)),
                ('mobileNo', models.CharField(max_length=255, unique=True)),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('password', models.CharField(max_length=255)),
                ('isActive', models.BooleanField(default=True)),
                ('isDeleted', models.BooleanField(default=False)),
                ('isVerified', models.BooleanField(default=False)),
                ('last_login', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('deviceToken', models.CharField(default=None, max_length=255, null=True)),
                ('deviceType', models.SmallIntegerField(default=0)),
                ('referralId', models.CharField(default=None, max_length=255, null=True)),
                ('profileImage', models.CharField(default=None, max_length=255, null=True)),
                ('forgotOtp', models.PositiveIntegerField(default=None, null=True)),
                ('loginOtp', models.PositiveIntegerField(default=None, null=True)),
                ('createdAt', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updatedAt', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'Users',
            },
        ),
    ]
